name: pdufa-daily-ics

on:
  schedule:
    # Runs daily at 03:20 UTC (~06:20 Asia/Jerusalem)
    - cron: "20 3 * * *"
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0           # <-- needed so rebase works against full history
          ref: main                # <-- ensure we're on main

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "Calendar Agent/requirements.txt"

      # Sanity check paths
      - name: Preflight check
        run: |
          pwd
          ls -la
          echo "---- recursive ----"
          ls -R
          echo "---- verify requirements.txt ----"
          test -f "Calendar Agent/requirements.txt" && echo "Found: Calendar Agent/requirements.txt" || (echo "NOT FOUND" && exit 1)

      - name: Install dependencies
        run: pip install -r "Calendar Agent/requirements.txt"

      - name: Build CSVs
        env:
          # Optional: only needed for online ticker lookup
          ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
        run: python "Calendar Agent/src/main.py"

      - name: Configure Git author
        run: |
          git config user.name "pdufa-bot"
          git config user.email "pdufa-bot@users.noreply.github.com"

      - name: Commit CSV updates
        run: |
          git add "Calendar Agent/data/pdufa_master.csv" "Calendar Agent/data/blank.csv" "Calendar Agent/data/state.json" || true
          git commit -m "chore: daily PDUFA update $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "No changes to commit"

      # Keep our local branch up-to-date; our commit (if any) will be replayed on top
      - name: Rebase onto remote main
        run: |
          git fetch origin main
          git pull --rebase origin main || true

      # Detect if *this* last commit changed the CSV file
      - name: Detect CSV change
        id: diff
        run: |
          FILE="Calendar Agent/data/pdufa_master.csv"
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            if git diff --quiet HEAD^ HEAD -- "$FILE"; then
              echo "changed=false" >> "$GITHUB_OUTPUT"
            else
              echo "changed=true" >> "$GITHUB_OUTPUT"
            fi
          else
            # No parent commit (edge case) — treat as changed if file exists in repo
            if git ls-files --error-unmatch "$FILE" >/dev/null 2>&1; then
              echo "changed=true" >> "$GITHUB_OUTPUT"
            else
              echo "changed=false" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Push changes
        run: git push origin HEAD:main

      # Notify only if the CSV actually changed and the push succeeded
      - name: Notify success (Telegram)
        if: ${{ success() && steps.diff.outputs.changed == 'true' }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          COMMIT=$(git rev-parse --short HEAD)
          MSG=$(printf "✅ PDUFA CSV updated.\nRepo: %s\nRun: #%s\nCommit: %s" "${GITHUB_REPOSITORY}" "${GITHUB_RUN_NUMBER}" "${COMMIT}")
          curl -sS -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            --data-urlencode "chat_id=${TG_CHAT_ID}" \
            --data-urlencode "text=${MSG}"
